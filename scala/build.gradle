plugins {
    id 'scala'
    id 'maven-publish'
    id 'idea'
}
version = '0.0.0'
def mainClass='io.rbi.tpl8.Main'

def scala_version='2.11'
def imageTag='example'
def runImage='openjdk:8-jre-alpine'
def dockerNetwork='bridge' // OR your own

repositories {
    jcenter()
}

dependencies {
  compile "org.scala-lang:scala-library:${scala_version}.+"
  testCompile "org.scalatest:scalatest_${scala_version}:+"
}

mainClass = hasProperty('mainClass') ? project.mainClass : mainClass
// run using javaExec
task run(type: JavaExec, dependsOn: classes) {
    main = mainClass
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

// includes runtime dependencies in libs folder
task dumpLibs(type: Copy) {
  into "build/libs/"
  from configurations.runtime
}

// run using docker scala image
task dockerRun(type:Exec, dependsOn:[jar, dumpLibs]) {
  def dir = System.getProperty("user.dir")
  commandLine 'docker', 'run', '--rm',
    '--net', dockerNetwork,
    '-v', "${dir}:/app/", '-w', '/app',
    runImage, 'java', '-cp', "build/libs/*", mainClass
}

// build docker image
task dockerBuild(type:Exec, dependsOn:[jar, dumpLibs]) {
  commandLine 'docker', 'build', '-t', imageTag, '.'
}
